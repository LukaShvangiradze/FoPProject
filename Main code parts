package BASICInterpreter;

import java.util.*;

public class InterpreterMain {

    private static Map<String, Integer> map = new HashMap<>();

    private static boolean bigInd = true;

    public void eval(String code) {
        String[] lines = code.split("\n");
         for(int i = 0; i < lines.length; i++) {
            lines[i] = lines[i].trim();
            if (lines[i].isEmpty()) continue;

            //INTEGER ebis garda araferi
            //10+20-30, 0 ze gayofa danashtva, if an else shi bevri rame
             //if shi number - 10 >5
             //error ebis povna ara
             //input ar gvaq
             //FOR, while

            if(lines[i].startsWith("DIM ")) {
                handleDim(lines[i]);
            }
            if(lines[i].startsWith("PRINT ")) {
                handlePrint(lines[i]);
            }
            if(lines[i].startsWith("IF ")) {
                boolean ind = handleIf(lines[i]);
                if(!ind) {i += 2; bigInd = false;}
            }
            if(lines[i].startsWith("ELSE ") && !bigInd) {bigInd = true; continue;}
            if(lines[i].startsWith("ELSE ") && bigInd) {
                for(int j = i; j < lines.length; j++) {
                    if(lines[j].startsWith("END ")) {
                        i = j;
                        break;
                    }
                }
            }
            if(lines[i].startsWith("END ")) continue;
            if(lines[i].contains("=")) {
                handleAssignment(lines[i]);
            }
        }
    }

    private void handleDim(String line) {
        String sub = line;
        sub = line.substring(3);
       // String[] parts = line.split("DIM");
       // String exp = parts[1].trim();
        String[] par = sub.split("AS");
        map.put(par[0].trim(), 0);
    }
private boolean handleIf(String line) {
         if(line.contains(">")) {
             String[] par = line.split(">");
             String[] lef = par[0].split("IF");
             String op = lef[1].trim();
             String[] rig = par[1].split("THEN");
             String opana = rig[0].trim();

             int x, y;

             if('0' <= op.charAt(0) && op.charAt(0) <= '9') {
                 x = Integer.parseInt(op);
             }
             else x = map.get(op);

             if('0' <= opana.charAt(0) && opana.charAt(0) <= '9') {
                 y = Integer.parseInt(opana);
             }
             else y = map.get(opana);

             return x > y;
         }
        if(line.contains("<")) {
            String[] par = line.split("<");
            String[] lef = par[0].split("IF");
            String op = lef[1].trim();
            String[] rig = par[1].split("THEN");
            String opana = rig[0].trim();

            int x, y;

            if('0' <= op.charAt(0) && op.charAt(0) <= '9') {
                x = Integer.parseInt(op);
            }
            else x = map.get(op);

            if('0' <= opana.charAt(0) && opana.charAt(0) <= '9') {
                y = Integer.parseInt(opana);
            }
            else y = map.get(opana);

            return x < y;
        }

        return false;
    }

   private void handlePrint(String line) {
        String sub = line;
        sub = line.substring(5).trim();
        if('0'<= sub.charAt(0) && sub.charAt(0) <='9') {
            System.out.println(Integer.parseInt(sub));
        }
        else {
            System.out.println(map.get(sub));
        }
    }

    private void handleAssignment(String line) {
        String[] par = line.split("=");
        String val = par[0].trim();
        par[1] = par[1].trim();
        if(par[1].contains("+")) {
            handleA(val, par[1], "\+");
        }
        else if(par[1].contains("-")) {
            handleA(val, par[1], "\-");
        }
        else if(par[1].contains("/")) {
            handleA(val, par[1], "\/");
        }
        else if(par[1].contains("")) {
            handleA(val, par[1], "\");
        }
        else if(par[1].contains("MOD")) {
            handleA(val, par[1], "MOD");
        }
        else {
            if('0' <= par[1].charAt(0) && par[1].charAt(0) <= '9') {
                 map.put(val, Integer.parseInt(par[1]));
            }
            else {
                map.put(val, map.get(par[1]));
            }
        }

    }
private void handleA(String v, String par1, String op) {
        String[] div = par1.split(op);
        String lef = div[0].trim();
        String rig = div[1].trim();

        int x, y;

        if('0' <= lef.charAt(0) && lef.charAt(0) <= '9') {
            x = Integer.parseInt(lef);
        }
        else x = map.get(lef);

        if('0' <= rig.charAt(0) && rig.charAt(0) <= '9') {
            y = Integer.parseInt(rig);
        }
        else y = map.get(rig);

        if(op == "\+") map.put(v, x + y);
        if(op == "\-") map.put(v, x - y);
        if(op == "\") map.put(v, x y);
        if(op == "\%") map.put(v, x / y); // 0
        if(op == "MOD") map.put(v, x % y); //0

    }



    public static void main(String[] args) {

        InterpreterMain interpreter = new InterpreterMain();

        Scanner sc = new Scanner(System.in);

        String program = "";

        while(sc.hasNextLine()) {
            program += sc.nextLine();
            program += '\n';
            //press CTRL+D to stop
        }

        interpreter.eval(program);

    }

}
