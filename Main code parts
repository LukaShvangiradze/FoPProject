package FoPProject;

import java.util.*;

public class FreeBASICInterpreter {



    static Map<String, Integer> map = new HashMap<>();

    static ArrayList<String> store = new ArrayList<>();

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);



        while(scanner.hasNextLine()) {
            String input = scanner.nextLine();
            input.trim();
            String sub = "";
            for (int i = 1; i < input.length(); i++) {
                if (input.charAt(i) == ' ' && input.charAt(i - 1) != ' ') {
                    sub += input.charAt(i);
                }
                if (input.charAt(i) != ' ') {
                    sub += input.charAt(i);
                }

            }
            store.add(sub);
            //Press Ctrl + D to stop getting input
        }

      for(int i = 0 ; i < store.size(); i++) {
            if(store.get(i).startsWith("DIM ")) {
                String dim = "";
                for(int j = 4; j < store.get(i).length(); i++) {
                    if(store.get(i).charAt(j) != ' ') {
                        dim += store.get(i).charAt(j);
                    }
                    if(dim.length() > 0 && store.get(i).charAt(j) == ' ') {
                        break;
                    }
                }
                map.put(dim, 0);
            }
            if(store.get(i).contains("IF")) {
               IF(i);
            }

     }
}

 public static void IF(int ind) {
        String str = store.get(ind);
        String save = "";

        for(int i = 2; i < str.length(); i++) {
            if(str.charAt(i) != ' ') {
                save += str.charAt(i);
            }
            if(save.length() > 0 && str.charAt(i) == ' ') {
                break;
            }
        }

        String comp = "";

        for(int i = 0; i < str.length(); i++) {
            if('0' <= str.charAt(i) && str.charAt(i) <= '9') {
                comp += str.charAt(i);
            }
        }

        int x;

        //variables contain only alphabet symbols in their names
        // >, <, >=, <=, ==, !=
}
